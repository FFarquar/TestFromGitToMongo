@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NM
<head>
    <link href="TestFromGitToMongo/styles.css" rel="stylesheet" />
</head>

<EditForm Model ="user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator/>
@*
    @if (showLoginSpinner == true)
    {
        <div class="spinner"></div>
    }
*@
    

    <div class="mb-3">
        <label for="userName">User name</label>
        <InputText id="userName" @bind-Value="user.username" class="form-control" />
        <ValidationMessage For="@(() => user.username)" />
    </div>

    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.password)" />
    </div>

    <button type="submit" class="btn btn-primary" disabled="@isDisabled">Login</button>

    <div class=@messagecssClass>
        <span>@message</span>
    </div>

    @if (showLoginSpinner == true)
    {
        <div class="spinner">LOADING</div>
    }

</EditForm>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string returnUrl { get; set; } = string.Empty;

    Boolean showLoginSpinner = false;
    Boolean isDisabled = false;
    UserLogin user = new UserLogin(); 

    string message = string.Empty;
    string messagecssClass = string.Empty;


    async Task HandleLogin()
    {
        showLoginSpinner = true;
        isDisabled = true;
        messagecssClass = "text-warning display-6";
        message = "Initial login can take up to a minute. Please be patient";        

        var result = await AuthService.Login(user);
        //var result = await AuthService.TestCall(user);
        showLoginSpinner = false;
        message = result.Message;
        if (result.Success)
        {

            messagecssClass = "text-success";
            NM.NavigateTo(returnUrl);
        }
        else
        {
            messagecssClass = "text-danger";    
        }

        isDisabled = false;
        message = result.Message;
    }

    protected override void OnInitialized()
    {
        messagecssClass = "text-warning display-6";
        message = "Initial login can take up to a minute. Please be patient";

    }
}