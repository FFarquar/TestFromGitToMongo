
@page "/trips/{bikeId:int}"
@*@using BikeChainUsage.Shared*@
@inject ITripServiceClient TripService
@inject NavigationManager NM

<h3>Trips</h3>
<div class="btn-group" role="group" aria-label="Basic example">
    <button type="button" @onclick="() => AddTrip()" class="btn btn-secondary fa fa-bicycle"> Add trip</button>
    <button type="button" @onclick="() => ViewNotes()" class="btn btn-secondary fa fa-sticky-note-o"> Notes</button>
</div>

@if(TripService.Trips == null || TripService.Trips.Count == 0)
{
    <span>Loading Trips</span>
}

   <table class="table table-striped table-bordered">
       
        <thead class="thead-dark">

                <tr>
                    <th scope="col">Chain</th>
                    <th scope="col" width="150px">Date</th>
                    <th scope="col">Trip Distance (km)</th>
                    <th scope="col">Chain Rotation</th>
                    <th scope="col">Description</th>
                    <th scope="col">Notes</th>
                    <th scope="col">Edit/Delete</th>
                </tr>

        </thead>
 <tbody>
@foreach (var trip in TripService.Trips)
{
    <tr>

      <td>@trip.ChainLetter</td>
      <td>@trip.Date.ToString("dd MMM yyyy")</td>
      <td>@trip.TripDistance</td>
      <td>@trip.ChainRotation</td>
      <td>@trip.TripDescription</td>
      <td>@trip.TripNotes</td>
      <td><a href="editdeletetrip/@trip._id/@bikeId?returnUrl=@NM.ToBaseRelativePath(NM.Uri)"><input type="button" value="Edit"></a></td>
    </tr>
}
    </tbody>
   </table>



@code {
        [Parameter]
        public int bikeId { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {

        await TripService.GetTripsForBike(bikeId);
    }

    protected  async Task AddTrip()
    {

        var returnURL = @NM.ToBaseRelativePath(NM.Uri);
        NM.NavigateTo($"addTrip/{bikeId}?returnUrl={returnURL}");
    }

        
    protected  async Task ViewNotes()
    {

        var returnURL = @NM.ToBaseRelativePath(NM.Uri);
        NM.NavigateTo($"notes/{bikeId}?returnUrl={returnURL}");
    }
}
